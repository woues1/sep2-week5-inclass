// File: Jenkinsfile
pipeline {
    agent any
    environment {
        SONARQUBE_SERVER = 'SonarQubeServer'
        SONAR_TOKEN = 'sqa_39941cd1a716bfa0d138ef4bc053f7b62aec2d7a' // Store the token securely
        DOCKER_CREDENTIALS_ID = 'Docker_Hub'
        DOCKERHUB_REPO='tonihirv/myapp'
        DOCKER_IMAGE_TAG='latest'
}
stages {
    stage('Checkout') {
        steps {
            git branch: 'main', url: 'https://github.com/woues1/sep2-week5-inclass.git'
        }
    }
    stage('Build') {
        steps {
            bat 'mvn clean install'
        }
    }
    stage('SonarQube Analysis') {
        steps {
            withSonarQubeEnv('SonarQubeServer') {
                bat """
                sonar-scanner ^
                -Dsonar.projectKey=devops-demo ^
                -Dsonar.sources=src ^
                -Dsonar.projectName=DevOps-Demo ^
                -Dsonar.host.url=http://localhost:9000 ^
                -Dsonar.login=${env.SONAR_TOKEN} ^
                -Dsonar.java.binaries=target/classes
                """
            }
        }
    }
    stage('push docker image to docker hub') {
        steps {
            script {
                def image = docker.build("${DOCKERHUB_REPO}:${DOCKER_IMAGE_TAG}")
                image.push()
            }
        }
    }
}
}